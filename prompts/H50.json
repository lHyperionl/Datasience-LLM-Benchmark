{
  "prompt": "Write Python code that first creates a pandas DataFrame with student performance data: \n`data = {'StudentID': ['S001', 'S002', 'S003', 'S004', 'S005', 'S006', 'S007', 'S008', 'S009', 'S010', 'S011', 'S012'], 'Subject': ['Math', 'Science', 'Math', 'English', 'Science', 'Math', 'English', 'Science', 'Math', 'English', 'Math', 'Science'], 'Midterm_Score': [85, 92, 78, 88, 76, 95, 82, 89, 70, 91, 65, 77], 'Final_Score': [90, 88, 82, 92, 80, 91, 85, 93, 75, 89, 70, 81], 'Attendance_Rate': [0.95, 0.98, 0.85, 0.92, 0.80, 0.99, 0.88, 0.96, 0.75, 0.93, 0.70, 0.82]}`\nThen, using this DataFrame, the code should: 1) Calculate the Pearson correlation coefficient between 'Attendance_Rate' and 'Final_Score'. Print this coefficient. 2) Create and display a scatter plot of 'Attendance_Rate' (x-axis) vs 'Final_Score' (y-axis). Points on the scatter plot should be colored based on the 'Subject'. The plot should include a legend for the subjects, a title 'Final Score vs. Attendance Rate by Subject', and clear axis labels. 3) Add a new column 'Overall_Grade' based on 'Final_Score': 'A' if Final_Score >= 90, 'B' if 80 <= Final_Score < 90, 'C' if 70 <= Final_Score < 80, 'D' if Final_Score < 70. Print the count of students in each grade category. Include necessary imports (pandas, matplotlib.pyplot, seaborn for potentially better aesthetics but not required for coloring, scipy.stats for correlation). Provide only the Python code.",
  "difficulty": "hard",
  "category": "Statistical Modeling & Visualization",
  "dataset_reference": null,
  "evaluation_criteria": "Code should correctly create DataFrame, calculate and print Pearson correlation, generate a scatter plot colored by subject with proper labels/legend/title. It must also correctly assign grades and print grade distribution. The plot must be generated."
}
