{
  "prompt": "Write Python code for a classification task using the mobiles_2025.csv dataset. The code should: 1) Load data. 2) Clean `Launched Price (USA)` (remove 'USD ', commas, to numeric, errors to NaN). Create a binary target `is_expensive_usa`: 1 if cleaned `Launched Price (USA)` > 1000, else 0. Drop rows where `is_expensive_usa` is NaN. 3) Clean features: `Mobile Weight` (remove 'g', to numeric), `RAM` (remove 'GB', to numeric), `Battery Capacity` (remove 'mAh', to numeric), `Screen Size` (remove ' inches', to numeric). For `Front Camera` and `Back Camera`, extract the first numerical MP value (default 0 if none). 4) Handle categorical features: One-hot encode `Company Name` and `Processor`. 5) Define features `X` using all cleaned numerical features (`Mobile Weight`, `RAM`, `Front Camera` (cleaned), `Back Camera` (cleaned), `Battery Capacity`, `Screen Size`, `Launched Year`) and the one-hot encoded categorical features. Define target `y` as `is_expensive_usa`. Drop rows with any NaNs in features or target. 6) Split data (80% train, 20% test, `random_state=42`). 7) Train a RandomForestClassifier (`n_estimators=100`, `random_state=42`). 8) Evaluate using F1-score (macro average) and ROC AUC score. Include proper imports and assume CSV is in current directory. Provide only Python code.",
  "difficulty": "hard",
  "category": "Classification",
  "dataset_reference": "mobiles_2025.csv",
  "evaluation_criteria": "Code should load CSV, create binary target `is_expensive_usa` from cleaned US price, clean all specified numeric and camera features, one-hot encode `Company Name` & `Processor`, handle NaNs, train RandomForestClassifier, and report macro F1 & ROC AUC."
}
