{
  "prompt": "Write Python code that first creates a pandas DataFrame representing daily stock prices for 'TECHCO' using: \n`data = {'Date': pd.to_datetime(['2024-01-01', '2024-01-02', '2024-01-03', '2024-01-04', '2024-01-05', '2024-01-08', '2024-01-09', '2024-01-10']), 'Ticker': ['TECHCO']*8, 'Open': [150.0, 152.5, 151.0, 153.0, 155.5, 154.0, 156.0, 155.0], 'High': [153.0, 153.5, 154.0, 156.0, 157.0, 156.5, 157.5, 156.5], 'Low': [149.5, 150.5, 150.0, 152.5, 154.5, 153.0, 155.0, 154.0], 'Close': [152.0, 151.0, 153.5, 155.0, 154.5, 156.0, 157.0, 154.0], 'Volume': [1000000, 1200000, 1100000, 1300000, 900000, 1050000, 1150000, 950000]}`\nSet 'Date' as the index. Then, the code should: 1) Calculate the 3-day simple moving average (SMA) of the 'Close' price and add it as a new column 'SMA_3Day'. Handle initial days where a 3-day window isn't available by having NaN values. 2) Calculate the percentage change in 'Volume' from the previous day and add it as a new column 'Volume_Pct_Change'. Handle the first day by having a NaN value. 3) Print the resulting DataFrame with these new columns. Include necessary imports (pandas). Provide only the Python code.",
  "difficulty": "medium",
  "category": "Time Series Analysis",
  "dataset_reference": null,
  "evaluation_criteria": "Code should correctly create DataFrame with 'Date' as index, calculate 3-day SMA for 'Close' price, calculate daily percentage change for 'Volume', and print the DataFrame with new columns, handling NaNs appropriately."
}
