{
  "prompt": "Write Python code to perform classification using a RandomForestClassifier on the heart.csv dataset, including comprehensive preprocessing. The code should: 1) Load the dataset. 2) Define features `X` using all columns except `HeartDisease`, which is the target `y`. The columns to use as features are: `Age`, `Sex`, `ChestPainType`, `RestingBP`, `Cholesterol`, `FastingBS`, `RestingECG`, `MaxHR`, `ExerciseAngina`, `Oldpeak`, `ST_Slope`. 3) Preprocess categorical features (`Sex`, `ChestPainType`, `RestingECG`, `ExerciseAngina`, `ST_Slope`) using one-hot encoding. 4) Scale all numerical features using StandardScaler. 5) Split the preprocessed data into training (80%) and testing (20%) sets with `random_state=42`. 6) Train a RandomForestClassifier model (`n_estimators=100`, `random_state=42`). 7) Evaluate the model on the test set using accuracy, precision (macro average), recall (macro average), F1-score (macro average), and ROC-AUC score. Include proper imports (pandas, sklearn.model_selection, sklearn.ensemble, sklearn.preprocessing, sklearn.metrics) and assume the CSV file is in the current directory. Provide only the Python code without explanations.",
  "difficulty": "hard",
  "category": "Classification",
  "dataset_reference": "heart.csv",
  "evaluation_criteria": "Code should correctly load data, select specified features (`Age`, `Sex`, `ChestPainType`, `RestingBP`, `Cholesterol`, `FastingBS`, `RestingECG`, `MaxHR`, `ExerciseAngina`, `Oldpeak`, `ST_Slope`) and target (`HeartDisease`), one-hot encode specified categorical features, scale numerical features, split data (80/20, random_state=42), train a RandomForestClassifier (n_estimators=100, random_state=42), and evaluate using accuracy, macro-averaged precision, recall, F1-score, and ROC-AUC."
}
